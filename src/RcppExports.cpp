// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// Rginv
arma::mat Rginv(const arma::mat& m);
RcppExport SEXP _autostsm_Rginv(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(Rginv(m));
    return rcpp_result_gen;
END_RCPP
}
// gen_inv
arma::mat gen_inv(arma::mat m);
RcppExport SEXP _autostsm_gen_inv(SEXP mSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type m(mSEXP);
    rcpp_result_gen = Rcpp::wrap(gen_inv(m));
    return rcpp_result_gen;
END_RCPP
}
// kalman_filter
Rcpp::List kalman_filter(const arma::mat B0, const arma::mat P0, const arma::mat Dm, const arma::mat Am, const arma::mat Fm, const arma::mat Hm, const arma::mat Qm, const arma::mat Rm, const arma::mat yt, const arma::mat X, const arma::mat beta, bool smooth);
RcppExport SEXP _autostsm_kalman_filter(SEXP B0SEXP, SEXP P0SEXP, SEXP DmSEXP, SEXP AmSEXP, SEXP FmSEXP, SEXP HmSEXP, SEXP QmSEXP, SEXP RmSEXP, SEXP ytSEXP, SEXP XSEXP, SEXP betaSEXP, SEXP smoothSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat >::type B0(B0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type P0(P0SEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Dm(DmSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Am(AmSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Fm(FmSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Hm(HmSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Qm(QmSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type Rm(RmSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type yt(ytSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat >::type beta(betaSEXP);
    Rcpp::traits::input_parameter< bool >::type smooth(smoothSEXP);
    rcpp_result_gen = Rcpp::wrap(kalman_filter(B0, P0, Dm, Am, Fm, Hm, Qm, Rm, yt, X, beta, smooth));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_autostsm_Rginv", (DL_FUNC) &_autostsm_Rginv, 1},
    {"_autostsm_gen_inv", (DL_FUNC) &_autostsm_gen_inv, 1},
    {"_autostsm_kalman_filter", (DL_FUNC) &_autostsm_kalman_filter, 12},
    {NULL, NULL, 0}
};

RcppExport void R_init_autostsm(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
